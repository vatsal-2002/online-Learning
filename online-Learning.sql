CREATE DATABASE `onlineLearning`;

use onlineLearning;

CREATE TABLE teachers (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    firstName VARCHAR(50) NOT NULL,
    lastName VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    saltKey VARCHAR(255) NOT NULL,
    skills Enum('html', 'php', 'javascript', 'java'),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deletedAt TIMESTAMP NULL DEFAULT NULL
);

alter table teachers
ADD COLUMN userType varchar(50);

alter table users
ADD COLUMN userType varchar(50);



CREATE TABLE courses (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        teacherId INT UNSIGNED,
    name VARCHAR(50) NOT NULL,
    description VARCHAR(255),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deletedAt TIMESTAMP NULL DEFAULT NULL,
    FOREIGN KEY (teacherId) REFERENCES teachers(id)
);


CREATE TABLE urlList(
	id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    courseId int UNSIGNED,
    url VARCHAR(255),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deletedAt TIMESTAMP NULL DEFAULT NULL,
    FOREIGN KEY (courseId) REFERENCES courses(id)
);

CREATE TABLE assignments (
	id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    teacherId INT UNSIGNED,
    name VARCHAR(50) NOT NULL,
    startDate date,
    endDate date,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deletedAt TIMESTAMP NULL DEFAULT NULL,
    FOREIGN KEY (teacherId) REFERENCES teachers(id)
);


create table assignment_list(
	id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    assId INT UNSIGNED,
    question Varchar(255),
    answer varchar(500),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deletedAt TIMESTAMP NULL DEFAULT NULL,
    FOREIGN KEY (assId) REFERENCES assignments(id)
);

CREATE TABLE quizs (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    teacherId INT UNSIGNED,
    name VARCHAR(50) NOT NULL,
    startTime TIME,
    endTime TIME,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deletedAt TIMESTAMP NULL DEFAULT NULL,
    FOREIGN KEY (teacherId) REFERENCES teachers(id)
);


CREATE TABLE quiz_list(
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    quizId INT UNSIGNED,
    question VARCHAR(255),
    options VARCHAR(255),
    answer ENUM('A', 'B', 'C', 'D'), 
    correct_answer ENUM('A', 'B', 'C', 'D'),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deletedAt TIMESTAMP NULL DEFAULT NULL,
    FOREIGN KEY (quizId) REFERENCES quizs(id)
);

ALTER TABLE quiz_list MODIFY COLUMN options VARCHAR(1000);

ALTER TABLE quiz_list MODIFY COLUMN correct_answer ENUM('A', 'B', 'C', 'D');


CREATE TABLE users (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    firstName VARCHAR(50) NOT NULL,
    lastName VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    saltKey VARCHAR(255) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deletedAt TIMESTAMP NULL DEFAULT NULL
);

CREATE TABLE users_courses (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    userId INT UNSIGNED,
    courseId INT UNSIGNED,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deletedAt TIMESTAMP NULL DEFAULT NULL,
    FOREIGN KEY (userId) REFERENCES users(id),
    FOREIGN KEY (courseId) REFERENCES courses(id)
);


CREATE TABLE users_assignment (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    userId INT UNSIGNED,
    assId INT UNSIGNED,
    answer VARCHAR(500),
    submissionDate DATE,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deletedAt TIMESTAMP NULL DEFAULT NULL,
    FOREIGN KEY (userId) REFERENCES users(id),
    FOREIGN KEY (assId) REFERENCES assignments(id)
);

ALTER TABLE users_assignment
ADD COLUMN assignment_listID INT UNSIGNED,
ADD CONSTRAINT FK_assignment_listID FOREIGN KEY (assignment_listID) REFERENCES assignment_list(id);



ALTER TABLE users_assignment
ADD COLUMN score INT UNSIGNED DEFAULT 0;


CREATE TABLE users_quiz (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    userId INT UNSIGNED,
    quizId INT UNSIGNED,
    startTime TIME,
    endTime TIME,
    score INT,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deletedAt TIMESTAMP NULL DEFAULT NULL,
    FOREIGN KEY (userId) REFERENCES users(id),
    FOREIGN KEY (quizId) REFERENCES quizs(id)
);

ALTER TABLE users_quiz
ADD COLUMN submissionDate DATE;

ALTER TABLE users_quiz
ADD COLUMN answer VARCHAR(255); 


alter table courses
drop column url ;

alter table assignments
drop column path;




